name: Release

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: npm-${{ runner.os }}-18.x-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create zip
        uses: vimtor/action-zip@v1
        with:
          # Be sure to keep this in sync with the `files` array in `package.json`
          files: build/ scripts/ generated-types/ bundles/.empty_directory db/.empty_directory schemas/ AUTHORS package-lock.json package.json
          recursive: true
          dest: nodecg.zip

      - name: Semantic Release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish types
        run: |
          npm run generate-types-package
          cd generated-types
          npm publish --public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
