name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test:
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}

      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1

      - name: Ensure that bundle git parsing functionality works
        run: |
          git config --global user.email "ci@nodecg.dev"
          git config --global user.name "NodeCG Bot"

      - name: Restore Chromium dependency cache (Linux & macOS)
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/.cache/puppeteer
          key: chromium-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
        if: runner.os == 'Linux' || runner.os == 'macOS'

      - name: Restore Chromium dependency cache (Windows)
        uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\.cache\puppeteer
          key: chromium-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
        if: runner.os == 'Windows'

      - name: Restore npm/yarn dependency cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn --ignore-engines --frozen-lockfile --network-timeout 1000000

      - name: Lint
        run: |
          npm run lint

      - name: Build w/ instrumentation for coverage reporting
        run: |
          npm run instrument

      - name: Test
        run: |
          npm run test

      - name: Create code coverage report
        run: npx nyc report --reporter=text-lcov --include=\"src/**\" > coverage.lcov

      - name: Send code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.lcov
        # Only report once
        if: runner.os == 'Linux' && matrix.node-version == '16.x'
